{"version":3,"sources":["pages/BuyerPage/index.js","App.js","serviceWorker.js","index.js"],"names":["BuyerPage","counties","Virginia","name","propertyTax","Maryland","WashingtonDC","states","useState","username","state","locality","zipcode","propertyValue","propertyTaxPercent","propertyTaxValue","totalValue","userProfile","SetUserProfile","handleInputChange","event","target","value","taxValue","total","className","type","placeholder","onChange","length","preventDefault","stopPropagation","disabled","selected","map","values","split","percent","parseFloat","console","log","county","class","App","exitLink","setExitLink","userIdentity","setUserIdentity","userAction","setUserAction","href","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1549d0cf.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Style.css\"\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nfunction BuyerPage() {\r\n\r\n    const counties={\r\n        Virginia:[ \r\n            {name:\"fairfax County\",\r\n               propertyTax:1\r\n           },\r\n           {name:\"Loudoun County\",\r\n               propertyTax: 1.035},\r\n           {name: \"Arlington County\",\r\n            propertyTax:0.996},\r\n            {name:\"Alexandria\",\r\n               propertyTax:1.13},\r\n           {name: \"Culper County\",\r\n           propertyTax:0.62},\r\n           {name:\"Clarke County\",\r\n           propertyTax:0.54\r\n           },\r\n           {name: \"Falls Church\",\r\n           propertyTax:1.35},\r\n       \r\n           {name: \"Fauquier County\",\r\n               propertyTax:1}\r\n\r\n\r\n        ],\r\n\r\n        Maryland:\r\n            [{\r\n                name:\"Prince George's County\",\r\n                propertyTax:0.86 \r\n            },\r\n            {\r\n                name:\"Montgomery County\",\r\n                propertyTax:0.93\r\n            },\r\n            {\r\n                name:\"Frederick County\",\r\n                propertyTax:1.060\r\n                \r\n            },\r\n            {\r\n                name:\"Charles County\",\r\n                propertyTax:1.18\r\n                \r\n            },\r\n            {\r\n                name:\"Calvert County\",\r\n                propertyTax:0.95\r\n            }]\r\n        ,\r\n        WashingtonDC:[\r\n            {name:\"Washington D.C\",\r\n        propertyTax:0.85,}]\r\n        ,}\r\n\r\n     const states=[\r\n        {name:\"WashingtonDC\"},\r\n        {name:\"Virginia\",},\r\n        {name:\"Maryland\"}\r\n    ]\r\n\r\n    const deployFinal=function(event){\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n         var values = event.target.value.split(\",\");\r\n         var name = values[0]\r\n         var percent= parseFloat(values[1]);\r\n         console.log(percent);\r\n         var taxValue=userProfile.propertyValue*percent/100\r\n         var total=userProfile.propertyValue+taxValue\r\n         \r\n        SetUserProfile({\r\n            ...userProfile,locality:name,\r\n            propertyTaxPercent:percent,\r\n            propertyTaxValue:taxValue,\r\n            totalValue:total\r\n\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    const [userProfile, SetUserProfile]=useState(\r\n        {username:\"\",\r\n        state:\"\",\r\n        locality:\"\",\r\n        zipcode:\"\",\r\n        propertyValue:\"\",\r\n        propertyTaxPercent:\"\",\r\n        propertyTaxValue:\"\",\r\n        totalValue:\"\"\r\n\r\n        })\r\n\r\n        function handleInputChange(event) {\r\n            const { name, value } = event.target;\r\n            // console.log(name, value);\r\n            if(userProfile.propertyValue&&userProfile.propertyTaxPercent){\r\n                var taxValue=userProfile.propertyValue*userProfile.propertyTaxPercent/100\r\n                var total=userProfile.propertyValue+taxValue\r\n                }\r\n            SetUserProfile({...userProfile,propertyTaxValue:taxValue,\r\n                totalValue:total,[name]: value})\r\n          };\r\n\r\nconst deployCounties=function(event){\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    SetUserProfile({...userProfile,state:event.target.value})\r\n}\r\nreturn(\r\n    <div>\r\n        {/* inputsinfo */}\r\n        <div className=\"userNameDiv\">\r\n                <div>username</div> \r\n                <input type=\"text\" name=\"username\" placeholder=\"Name\" onChange={handleInputChange}/>\r\n                </div>\r\n          <div className=\"propertyValieDiv\">\r\n          <div>Property Value</div> \r\n          <input type=\"number\" name=\"propertyValue\" placeholder=\"Amount In Dollars\" onChange={handleInputChange}/>\r\n          </div>\r\n          \r\n        {/* \"select states */}\r\n          <div className=\"LocationDiv\">\r\n          <div>State</div> \r\n          <div>\r\n          {!states.length ? (\r\n           <div>empty</div>\r\n         ) : (\r\n            <select className=\"stateSelection\"\r\n                onChange={deployCounties}>\r\n            <option  disabled selected value>please Select State</option>\r\n                {states.map(state=>{\r\n               return (\r\n                 <option\r\n                 value={state.name}>\r\n                 {state.name}</option>\r\n               );\r\n             })}\r\n            </select>)}\r\n        </div>\r\n        <div className=\"county\">\r\n             {!counties[userProfile.state]?(\r\n                 <div></div>\r\n             ):(\r\n                 <select onChange={deployFinal}>\r\n                <option  disabled selected value>Which Locality?</option>\r\n\r\n                 {counties[userProfile.state].map(county=>{\r\n                     return(\r\n                         <option\r\n                         value={county.name + \",\" +county.propertyTax}\r\n                         >\r\n                        {county.name}\r\n                         </option>\r\n                     )})}\r\n             </select>)}\r\n\r\n        </div>\r\n        </div>\r\n          <div class={userProfile.username&&userProfile.locality&&userProfile.state&&userProfile.propertyTaxPercent?\"visible\":\"invisible\"}>\r\n             <div>\r\n              hello {userProfile.username} \r\n              <div>the property is marked at {userProfile.propertyValue} dollars</div>\r\n              <div>the property is in {userProfile.state} and in the locality of {userProfile.locality}</div>\r\n              <div>you will have to pay {userProfile.propertyTaxPercent} percent in taxes , which will be amounted to { userProfile.propertyTaxValue} in dollars</div>\r\n              <div>the total will be {userProfile.totalValue} dollars</div>\r\n              </div>\r\n          </div>\r\n  </div>\r\n)\r\n\r\n}\r\nexport default BuyerPage;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\"\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\n\nimport BuyerPage from \"./pages/BuyerPage\"\n\n//the initial choices to choose bewtween owner and propertu seeker. \nfunction App() {\n  const [exitLink, setExitLink]= useState(\n    \" \"\n  )\n  //owner or property seeker\n  const [userIdentity, setUserIdentity] = useState(\n    \"\"\n    )\n  //rent or sell property \n  const [userAction, setUserAction] = useState(\n    \"\"\n  )\nconst deploySecondary=function(event){\n  event.preventDefault();\n  event.stopPropagation();\n  console.log(event.target);\n  setUserIdentity(event.target.value);\n  if(event.target.value===\"buyer\"){\n    setExitLink(\"/Buyer\")\n  }\n}\n\nconst selectAction = function(event){\n  event.preventDefault();\n  event.stopPropagation();\n  setUserAction(event.target.value);\n  switch(event.target.value){\n    case \"rent\":\n      setExitLink(\"/Leaser\");\n      break;\n    case \"sell\":\n      setExitLink(\"/seller\");\n  }\n\n}\n  return (\n    <Router>\n\n<div class=\"container\">\n    <div class=\"firstChoiceDiv\">\n    <select class=\"firstChoice\" onChange={deploySecondary}>\n        <option  disabled selected value>I am </option>\n        <option value=\"owner\">Property Owner</option>\n        <option value=\"buyer\">Seeking Property</option>\n    </select> \n    <div class={userIdentity===\"buyer\"?\"visible\":\"invisible\"}>\n  <button><a href={exitLink}>{userIdentity + \" page\"}</a></button>\n    </div>\n    </div>\n\n    <div class={userIdentity===\"owner\"?\"visible\" : \"invisible\"}>\n    <select class=\"secondChoice\" onChange={selectAction}>\n        <option disabled selected value>I wish to </option>\n        <option value = \"sell\">Sell my property</option>\n        <option value = \"rent\">Lease my property</option>\n    </select>\n\n    <button class={userAction===\"rent\"||userAction===\"sell\"?\"visible\":\"invisible\"}><a href={exitLink}>{userAction + \" page\"}</a></button>\n\n\n    </div>\n    {/* <div>{userIdentity}</div> */}\n\n    <div>\n<Switch>\n<Route exact path=\"/buyer\">\n  <BuyerPage /> \n</Route>\n{/* <Route path=\"/seller\">\n  <SellerPage />\n</Route>\n<Route path=\"/leaser\">\n  <LeaserPage />\n</Route> */}\n\n</Switch>\n</div>\n\n</div>\n</Router>\n\n\n      \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}